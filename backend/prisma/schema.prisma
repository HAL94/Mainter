// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String  @unique
  hashed   String
  hashedRt String?
  App      App?

  @@map("users")
}

model App {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user          User            @relation(fields: [userId], references: [id])
  userId        Int             @unique
  Client        Client[]
  ClientVehicle ClientVehicle[]
  Job           Job[]
}

model Client {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  app   App    @relation(fields: [appId], references: [id])
  appId String

  fullName      String
  businessName  String?         @unique
  mobile        String
  code          Int             @default(autoincrement())
  email         String          @unique
  type          ClientType
  ClientVehicle ClientVehicle[]
  Job           Job[]

  @@map("clients")
}

model Job {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String
  orderNumber Int       @default(autoincrement())
  works       Json
  status      JobStatus @default(UNDER_MAINTENANCE)

  app   App    @relation(fields: [appId], references: [id])
  appId String

  client  Client @relation(fields: [ownerId], references: [id])
  ownerId Int

  vehicle   ClientVehicle @relation(fields: [vehicleId], references: [id])
  vehicleId Int

  @@map("jobs")
}

model ClientVehicle {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  app   App    @relation(fields: [appId], references: [id])
  appId String

  client  Client @relation(fields: [ownerId], references: [id])
  ownerId Int

  make  String
  model String
  plate String @unique
  year  String

  engineNo String?
  Job      Job[]

  @@map("vehicles")
}

enum ClientType {
  INDIVIDUAL
  BUSINESS
}

enum JobStatus {
  OPENED
  UNDER_MAINTENANCE
  COMPLETED
  CANCELED
}
